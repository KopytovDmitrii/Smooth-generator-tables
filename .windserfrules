При работе с Front-end задачами:
1) Для работы с макетами Используй MCP server figma: "Framelink Figma MCP"
    ВНИМАНИЕ!!!!!!------- 
    Figma является обязательным источником правды! При создании ЛЮБОГО компонента - обращайся в figmaMCP! Если хочешь создать компонент, которого не нашёл в дизайне, но он нужен для работы приложения - спроси об этом у меня и возьми подтверждение.  
    ------ ВНИМАНИЕ!!!
2) Для реализации используй: 
- React (use typescript) 
- Redux (redux toolkit)
- Eslint & preettier
3) При вёрстке будем использовать подход "Атомы - молекулы - визуализации". 
Атомы (Atoms) - атомарные элементы, например "Кнопка, иконка, инпут, картинка, подпись и т.п."
Малекулы (Molecules) - малекулярные элементы, например "Кнопка с иконкой, инпут с кнопкой, карточка с кнопкой и подписью и т.п."
Визуализации (views) - Визуализации, например "Карточка заметки, шапка страницы, список заметок и т.п."

Необходимо при верстке сначала создавать молекулы, затем атомы, а затем визуализации

Атомы и молекулы необходимо размещать в папках
Components/Atoms
Components/Molecules

Визуализации необходимо размещать в папке 
Views/{имя раздела или крупного компонента}

ВАЖНОЕ ПРАВИЛО: Малекулы строятся из атомов, визуализации из молекул (в редких случаях из атомов). НО! атомы не должны содержать молекулы. Малекулы не должны содержать визуализации!!
Иными словами атомы - элементарные элементы, строющиеся только на стандартных web компонентах. Используют стандартные теги. 


4. Unit tests - для функций необходимо писать тесты(Jest). Покрывай тестами только самые критичные точки кода.
5. Зависимости сразу указываем в package.json
6. НЕ ИСПОЛЬЗУЙ ВРЕМЕННЫЕ РЕШЕНИЕ! Решения должны быть production ready
